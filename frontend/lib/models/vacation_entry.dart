import 'package:commons_flutter/commons_flutter.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';
import 'package:frontend/models/vacation_category.dart';
import 'package:hive/hive.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'vacation_entry.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'vacation_entry.g.dart';

@freezed
class VacationEntry with _$VacationEntry {
  @HiveType(typeId: 7, adapterName: 'VacationEntryAdapter')
  const factory VacationEntry({
    @JsonKey(name: "id") @HiveField(0) required String id,
    @JsonKey(name: "start") @HiveField(1) required int start,
    @JsonKey(name: "end") @HiveField(2) required int end,
    @JsonKey(name: "category") @HiveField(3) required VacationCategory category,
     @JsonKey(name: "comment") @HiveField(4) required String? comment,
  }) = _VacationEntry;

  factory VacationEntry.fromJson(Map<String, Object?> json) =>
      _$VacationEntryFromJson(json);
}

extension VacationEntryExtension on VacationEntry {
  int get durationDays => ((end - start) / Duration.millisecondsPerDay).ceil();
}