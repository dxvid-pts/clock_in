import 'package:commons_flutter/commons_flutter.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:frontend/models/date_range_category.dart';
import 'package:hive/hive.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'tracking_entry.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'tracking_entry.g.dart';

@freezed
class TrackingEntry with _$TrackingEntry {
  @HiveType(typeId: 3, adapterName: 'TrackingEntryAdapter')
  const factory TrackingEntry({
    @JsonKey(name: "id") @HiveField(0) required String id,
    //milliseconds since epoch
    @JsonKey(name: "start") @HiveField(1) required int start,
    //milliseconds since epoch
    @JsonKey(name: "end") @HiveField(2) required int end,
    @JsonKey(name: "category") @HiveField(3) required DateRangeCategory category,
  }) = _TrackingEntry;

  factory TrackingEntry.fromJson(Map<String, Object?> json) =>
      _$TrackingEntryFromJson(json);
}

extension TrackingEntryExtension on TrackingEntry {
  Duration get duration => Duration(milliseconds: end - start);

  Day get day => Day.fromDateTime(DateTime.fromMillisecondsSinceEpoch(start));
}